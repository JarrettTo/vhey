import"./shreddit-slotter-28d219a3.js";import{W as t,_ as o,e as i,a as e}from"./shell-676e2013.js";import{i as a,j as s}from"./community-creation-walkthrough-57edb498.js";import{s as r,x as m}from"./icon-8c4e3009.js";import"./community-creation-walkthrough-images-4de51e38.js";import"./custom-event-dispatch-wrapper-2414d1e0.js";import"./action-components-b849b5f6.js";import"./faceplate-modal-2d019896.js";import"./index-2cd0a741.js";import"./upload-to-s3-d36fbd45.js";import"./ui-strings-4cc98385.js";import"./faceplate-textarea-input-899c007a.js";import"./live-dfde7187.js";import"./text-input-2f7ff360.js";import"./form-common-utils-450ddffa.js";import"./faceplate-input-24154400.js";import"./input-element-c1862430.js";import"./faceplate-text-input-b587df82.js";import"./faceplate-form-745213bf.js";import"./list-item-e0968412.js";import"./index-90f97c04.js";import"./chip-a2ca4b8d.js";import"./avatar-924c80b1.js";import"./pluralize-6ac540cf.js";import"./community-image-upload-317816a0.js";import"./validate-image-7b44efe1.js";const c=t(r);let p=class extends c{constructor(){super(...arguments),this.communityCreationModal=null}static get styles(){return[e]}async connectedCallback(){super.connectedCallback(),this.communityCreationModal=this.querySelector(`rpl-dialog[dialog-id="${a}"]`)}showModal(){this.trackEvent(s()),this.communityCreationModal?.showModal()}disconnectedCallback(){super.disconnectedCallback()}render(){return m`<slot></slot>`}};p=o([i("community-creation-flow")],p);
//# sourceMappingURL=community-creation-flow-client-js-7a52270e.js.map
