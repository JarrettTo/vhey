import{f as e,a as t,_ as s,n as o,t as i,e as r,r as n,q as a,$ as c,a0 as p,fj as u,fk as h,fl as d,fm as l}from"./shell-676e2013.js";import{x as m,A as b,s as y}from"./icon-8c4e3009.js";import{B as C,b as f}from"./badge-669f9d6c.js";import{_ as k}from"./number-ea0536b9.js";import"./click-card-8ed7c255.js";import"./create-post-entry-point-wrapper-c1be41f5.js";import{u as v}from"./community-colors-cc023ba0.js";import{D as g}from"./display-theme-7e251d41.js";import{g as j,s as S}from"./utils-15d67db8.js";import"./cached-intl-e5b35306.js";import"./faceplate-hovercard-941a58fe.js";import"./popper-controller-b048cf6c.js";import"./makeEventDispatcher-28989282.js";import"./faceplate-tooltip-c8f30589.js";import"./subreddit-posting-eligibility-813b81dc.js";let E=class extends(e(y)){constructor(){super(...arguments),this.appearance=C.ALERT,this.outline=!1,this.initialCount=0,this.badgeClassname="",this.setCountEvent="",this.count=0,this.setCount=e=>{this.count=Number(e??0)},this.getCount=()=>this.count}connectedCallback(){super.connectedCallback(),this.count=this.initialCount,this.setCountEvent&&this.subscribe(this.setCountEvent,this.setCount)}disconnectedCallback(){super.disconnectedCallback(),this.setCountEvent&&this.unsubscribe(this.setCountEvent,this.setCount)}render(){return this.count?m`${f({appearance:this.appearance,outline:this.outline,content:k(this.count).toString(),attributes:{className:this.badgeClassname}})}`:b}};E.styles=[t],s([o({type:String})],E.prototype,"appearance",void 0),s([o({type:Boolean})],E.prototype,"outline",void 0),s([o({type:Number,attribute:"initial-count"})],E.prototype,"initialCount",void 0),s([o({type:String,attribute:"badge-classname"})],E.prototype,"badgeClassname",void 0),s([o({type:String,attribute:"set-count-event"})],E.prototype,"setCountEvent",void 0),s([i()],E.prototype,"count",void 0),E=s([r("dynamic-badge")],E);let B=class extends y{constructor(){super(...arguments),this.country="",this.cookieDomain="",this.pubsub=new n(this),this.hasThemeCookieBeenSetByUser=!1}async connectedCallback(){super.connectedCallback(),this.pubsub.subscribe(a.ThemeCookieSetByUser,(()=>{this.hasThemeCookieBeenSetByUser=!0})),this.syncCookieToUserPreference()}async syncCookieToUserPreference(){try{const{data:e}=await c({operation:p.IdentityUserPreferences,variables:{includeNightMode:!0}});if(this.hasThemeCookieBeenSetByUser)return;const t=e.identity?.preferences?.isNightModeEnabled;if(null==t)return;const s=j();if(t===(s===g.Darkmode))return;v({isDarkMode:t}),S(this.country,this.cookieDomain,t),this.reportMismatch(),this.pubsub.publish(a.ThemeCookieSyncedFromUserPreference)}catch{}}reportMismatch(){const e=u(this.country)&&!h(),t={cookies_enabled:navigator.cookieEnabled&&!e?"true":"false"};this.w3Report(t)}w3Report(e){d({type:l.Counter,name:"shreddit_darkmode_preference_mismatches",value:1,labels:e})}render(){return m`<community-colors></community-colors>`}};s([o({type:String})],B.prototype,"country",void 0),s([o({type:String,attribute:"cookie-domain"})],B.prototype,"cookieDomain",void 0),B=s([r("shreddit-darkmode-syncer")],B);
//# sourceMappingURL=hui-helpers-client-js-cae5e6db.js.map
