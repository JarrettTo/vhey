import"./faceplate-switch-input-ff61907d.js";import{_ as e,n as t,e as s,bm as i,fw as n,Y as a,r as o,$ as r,a0 as l,q as c,W as d,cm as h,a as p,cl as u,t as m,cn as k}from"./shell-676e2013.js";import{s as b,x as y}from"./icon-8c4e3009.js";import{u as v}from"./community-colors-cc023ba0.js";import{D as f}from"./display-theme-7e251d41.js";import{g as C,s as w}from"./utils-15d67db8.js";import{s as g}from"./translations-d2a1922a.js";import{l as S}from"./index-386a36f1.js";import"./checked-input-element-9fd8b715.js";import"./faceplate-input-24154400.js";import"./input-element-c1862430.js";import"./form-common-utils-450ddffa.js";let x=class extends b{constructor(){super(...arguments),this.enabled=!1,this.country=""}handler(e){e.preventDefault(),this.setModeCookie({value:this.enabled?"false":"true"});(document.cookie.match(/mod_mode_enabled=/g)||[]).length>1&&this.clearModeCookieDuplicates(),this.windowReload()}setModeCookie({value:e,options:t}){i({country:this.country,name:n,value:e,options:t})}clearModeCookieDuplicates(){this.setModeCookie({value:"",options:{expires:0,path:"/"}})}windowReload(){window.location.reload()}render(){return y`<div @click="${this.handler}" @keypress="${this.handler}"> <slot></slot> </div>`}};e([t({type:Boolean})],x.prototype,"enabled",void 0),e([t({type:String})],x.prototype,"country",void 0),x=e([s("shreddit-modmode-setter")],x);let E=class extends b{constructor(){super(...arguments),this.country="",this.cookieDomain="",this.pubsub=new o(this),this.onThemeCookieSynced=()=>{if(null==this.faceplateSwitch)return;const e=C()===f.Darkmode;this.faceplateSwitch.checked!==e&&(this.faceplateSwitch.checked=e)},this.setUserPreference=async e=>{await r({operation:l.UpdateAccountPreferences,variables:{input:{isNightModeEnabled:e}}})},this.updateClientStyles=e=>{v({isDarkMode:e});const t=this.querySelector("faceplate-switch-input");t&&(t.checked=e)},this.handler=async e=>{this.pubsub.publish(c.ThemeCookieSetByUser),e.preventDefault();const t=C()!==f.Darkmode;this.updateClientStyles(t),w(this.country,this.cookieDomain,t),await this.setUserPreference(t)},this.handleKeypress=e=>{"Enter"!==e.key&&"Space"!==e.key||this.handler(e)}}async connectedCallback(){super.connectedCallback(),this.pubsub.subscribe(c.ThemeCookieSyncedFromUserPreference,this.onThemeCookieSynced)}get faceplateSwitch(){return this.defaultSlotElements[0]?.querySelector("faceplate-switch-input")}render(){return y`<div @click="${this.handler}" @keypress="${this.handleKeypress}"> <slot></slot> </div>`}};e([t({type:String})],E.prototype,"country",void 0),e([t({type:String,attribute:"cookie-domain"})],E.prototype,"cookieDomain",void 0),e([a()],E.prototype,"defaultSlotElements",void 0),E=e([s("shreddit-darkmode-setter")],E);let T=class extends(d(b)){constructor(){super(...arguments),this.translationContextValue=h,this.pubsub=new o(this)}updateTranslationSetting(e){const t=new CustomEvent("update-translation-context",{bubbles:!0,composed:!0,detail:{...this.translationContextValue,isTranslationActive:e}});this.dispatchEvent(t),this.pubsub.publish(c.I18nPostTranslationOverride,{isContextUpdateEvent:!0,isTranslationActive:e,id:""})}async handleEvent(e){e.preventDefault(),this.trackEvent(g({isImmersiveTranslationsActive:!this.translationContextValue.isTranslationActive})),this.updateTranslationSetting(!this.translationContextValue.isTranslationActive)}handleKeypress(e){"Enter"!==e.key&&"Space"!==e.key||this.handleEvent(e)}render(){return y`<div data-testid="translation-setting-click-setter-button" @click="${this.handleEvent}" @keypress="${this.handleKeypress}" class="flex justify-between items-center pr-md cursor-pointer hover:bg-neutral-background-hover" tabindex="0" role="button" arial-label="Translation setting"> <slot></slot> <faceplate-switch-input data-testid="translation-setting-click-setter-switch-input" class="m-0 [&_label]:hidden" ?checked="${!!this.translationContextValue.isTranslationActive}" name="translation-settings-list-input"></faceplate-switch-input> </div>`}};T.styles=[p],e([u({context:k,subscribe:!0}),m()],T.prototype,"translationContextValue",void 0),T=e([s("translation-setting-click-setter")],T);let j=class extends b{logout(){S()}connectedCallback(){super.connectedCallback(),this.addEventListener("click",this.logout)}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener("click",this.logout)}createRenderRoot(){return this}};j=e([s("user-drawer-logout")],j);
//# sourceMappingURL=user-drawer-client-js-0060f907.js.map
