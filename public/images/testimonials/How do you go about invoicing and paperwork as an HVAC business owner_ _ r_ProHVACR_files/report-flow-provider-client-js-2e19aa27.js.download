import{_ as t,e,r,al as s,i4 as o,J as i,q as a,n,g as p,$ as c,k as l}from"./shell-676e2013.js";import"./report-flow-727057fd.js";import"./report-flow-provider-639c9209.js";import{s as d,x as u}from"./icon-8c4e3009.js";import{c as h,g as m,a as f,b}from"./submit-report-helper-df637685.js";import{F as y}from"./types-1cf35b8e.js";import"./faceplate-modal-2d019896.js";import"./faceplate-bottom-sheet-7f90aa1b.js";import"./helpers-093c3384.js";import"./a-bef4fc0c.js";import"./faceplate-radio-input-328eaa8c.js";import"./checked-input-element-9fd8b715.js";import"./faceplate-input-24154400.js";import"./input-element-c1862430.js";import"./form-common-utils-450ddffa.js";import"./faceplate-progress-934ab1f3.js";import"./faceplate-text-input-b587df82.js";import"./live-dfde7187.js";import"./text-input-2f7ff360.js";import"./shreddit-slotter-28d219a3.js";import"./faceplate-textarea-input-899c007a.js";import"./faceplate-switch-input-ff61907d.js";import"./user-blocking-3b439d4d.js";import"./common-ui-strings-1f1d5c0f.js";import"./rpl-dialog-sheet-57e26247.js";import"./rpl-bottom-sheet-cd589c7a.js";import"./TinyGesture-6f7cc1aa.js";import"./contains-1042b204.js";let g=class extends d{constructor(){super(...arguments),this.pubsub=new r(this),this._activateFeature=async t=>s(t),this.openCTL=async({authorName:t,thingId:e,userDetailType:r})=>{const s=r?{userDetailType:r}:void 0;await this._activateFeature({name:o,renderMode:i.Contents,routeParams:{authorName:t,thingId:e},queryParams:{...s}})}}connectedCallback(){super.connectedCallback(),this.pubsub.subscribe(a.CTLReportInit,this.openCTL,!1)}disconnectedCallback(){this.pubsub.unsubscribe(a.CTLReportInit,this.openCTL),super.disconnectedCallback()}render(){return u`<slot></slot>`}};g=t([e("ctl-reporting-provider")],g);let j=class extends d{constructor(){super(...arguments),this.closeCTLModal=()=>{this.ctlModal?.hide(),this.dispatchEvent(p("report-flow-close"))}}get ctlModal(){return document.querySelector("rpl-dialog#ctl-report-content-modal")}get ctlModalContents(){return document.querySelector("#ctl-report-content-modal rpl-modal-card")}};j=t([e("base-ctl-component")],j);let T=class extends j{constructor(){super(...arguments),this.requestClientGQL=c,this.showThankYou=()=>{const t=p("shreddit-slotter-set-slot-name",{slotName:"thankyou"});this.ctlModalContents?.querySelector("shreddit-slotter")?.dispatchEvent(t)},this.reportRequest=async(t,e)=>{const r=b[t];if(!r)throw new Error("No corresponding gql operation for the item type provided");try{const t=await this.requestClientGQL({operation:r,variables:{input:e}});return h(t)?t:void 0}catch(t){throw new Error("Error calling the gql report operation")}},this.submitCTLReport=async()=>{if(!this.thingId)return;const t=m(this.thingId);try{const e=f(t,this.thingId,{REPORT_REASONS:"SELF_HARM",...this.userDetailType?{USER_DETAILS:this.userDetailType}:{}});if(!await this.reportRequest(t,e))throw new Error;this.showThankYou(),this.dispatchEvent(p("report-tracking",{reportFlow:{flowOptionSelected:y.REDDITCARES_BUTTON}}))}catch(t){this.dispatchEvent(p("faceplate-alert",{level:l.error,message:"An error occurred while submitting your report. Wait a bit, and try again."}))}},this.firstUpdated=()=>{this.querySelector("#ctl-yes-button")?.addEventListener("click",this.submitCTLReport)}}render(){return u`<slot></slot>`}};t([n({type:String,attribute:"author-name"})],T.prototype,"authorName",void 0),t([n({type:String,attribute:"thing-id"})],T.prototype,"thingId",void 0),t([n({type:String,attribute:"user-detail-type"})],T.prototype,"userDetailType",void 0),T=t([e("ctl-step-one")],T);let w=class extends j{constructor(){super(...arguments),this.firstUpdated=()=>{this.okButton?.addEventListener("click",this.closeCTLModal)}}get okButton(){return this.querySelector("#ctl-ok-button")}render(){return u`<slot></slot>`}};w=t([e("ctl-step-two")],w);
//# sourceMappingURL=report-flow-provider-client-js-2e19aa27.js.map
